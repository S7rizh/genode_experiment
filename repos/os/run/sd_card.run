assert_spec pbxa9

create_boot_directory
import_from_depot [depot_user]/src/[base_src] \
                  [depot_user]/src/init \
                  [depot_user]/src/platform_drv

build { drivers/sd_card test/block/client }

install_config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default caps="100"/>

	<start name="platform_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Platform"/></provides>
		<config>
			<device name="card" type="arm,pl18x">
				<io_mem address="0x10005000" size="0x1000"/>
			</device>
			<policy label="pl180_sd_card_drv -> ">
				<device name="card"/>
			</policy>
		</config>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
		<route> <any-service> <parent/> </any-service> </route>
	</start>

	<start name="pl180_sd_card_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Block"/></provides>
		<route>
			<service name="ROM"> <parent/> </service>
			<service name="PD">  <parent/> </service>
			<service name="RM">  <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
			<any-service> <any-child/> </any-service>
		</route>
	</start>

	<start name="test-block-client">
		<resource name="RAM" quantum="1M" />
		<route>
			<service name="ROM"> <parent/> </service>
			<service name="PD">  <parent/> </service>
			<service name="RM">  <parent/> </service>
			<service name="CPU"> <parent/> </service>
			<service name="LOG"> <parent/> </service>
			<any-service> <any-child/> </any-service>
		</route>
	</start>
</config> }

build_boot_image { pl180_sd_card_drv test-block-client }

set disk_image "bin/sd_card.img"
if { [file exists $disk_image] == 0 } then {
	# create empty block device file
	catch { exec dd if=/dev/zero of=$disk_image bs=1M count=512 }
}
append qemu_args "-drive file=$disk_image,format=raw,if=sd,cache=writeback -nographic "
run_genode_until forever

exec rm $disk_image

# vi: set ft=tcl :
