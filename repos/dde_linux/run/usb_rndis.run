#
# \brief  Test for using the TCP/IP terminal over USB (RNDIS, CDC_ETHER or USB NIC)
# \author Alexander Senier
# \date   2017-10-19
#

assert_spec x86

#
# Build
#

set build_components {
	core init timer
	drivers/usb_host
	drivers/usb_net
	server/tcp_terminal
	test/terminal_echo
	lib/vfs/lwip
	lib/vfs/pipe
	server/nic_router
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

set config ""
append config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="usb_drv" caps="120">
		<binary name="} [usb_host_drv_binary] {"/>
		<resource name="RAM" quantum="24M"/>
		<provides><service name="Usb"/></provides>
		<config>
			<policy label_prefix="usb_net_drv" vendor_id="0x0b95" product_id="0x1790"/>
		</config>
	</start>

	<start name="usb_net_drv">
		<resource name="RAM" quantum="20M"/>
		<config mode="uplink_client" mac="02:00:00:00:01:01" />
		<route>
			<service name="Uplink"><child name="nic_router"/></service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="nic_router" caps="200">
		<resource name="RAM" quantum="10M"/>
		<provides>
			<service name="Nic"/>
			<service name="Uplink"/>
		</provides>
		<config verbose_domain_state="yes">

			<policy label_prefix="tcp_terminal" domain="downlink"/>
			<policy label_prefix="usb_net_drv"  domain="uplink"/>

			<domain name="uplink">

				<nat domain="downlink" tcp-ports="16384"/>
				<tcp-forward port="88" domain="downlink" to="10.0.3.2"/>

			</domain>

			<domain name="downlink" interface="10.0.3.1/24">

				<dhcp-server ip_first="10.0.3.2" ip_last="10.0.3.2"/>

			</domain>

		</config>
	</start>

	<start name="tcp_terminal" caps="200">
		<resource name="RAM" quantum="3M"/>
		<provides> <service name="Terminal"/> </provides>
		<config>
			<policy label_prefix="test-terminal_echo" port="8888"/>
			<vfs>
				<dir name="dev"> <log/> </dir>
				<dir name="socket"> <lwip dhcp="yes"/> </dir>
				<dir name="pipe"> <pipe/> </dir>
			</vfs>
			<libc stdout="/dev/log" socket="/socket" pipe="/pipe"/>
		</config>
		<route>
			<service name="Nic"> <child name="nic_router" /> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
	<start name="test-terminal_echo">
		<resource name="RAM" quantum="2M"/>
	</start>}

append_platform_drv_config

append config {
</config>
}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core ld.lib.so init timer
	libc.lib.so vfs.lib.so vfs_pipe.lib.so
	tcp_terminal
	test-terminal_echo
	vfs_lwip.lib.so
	usb_net_drv
	nic_router
}
append boot_modules [usb_host_drv_binary]

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args "  -device usb-ehci,id=ehci"

# Samsung RNDIS (tested with S5, Galaxy Tab S
append qemu_args "  -device usb-host,bus=ehci.0,vendorid=0x04e8,productid=0x6860"
append qemu_args "  -device usb-host,bus=ehci.0,vendorid=0x04e8,productid=0x6863"
append qemu_args "  -device usb-host,bus=ehci.0,vendorid=0x04e8,productid=0x6864"

# ASIX Electronics Corp. AX88179 Gigabit Ethernet
append qemu_args "  -device usb-host,bus=ehci.0,vendorid=0x0b95,productid=0x1790"

# Motorola Moto E, G4 Play
append qemu_args "  -device usb-host,id=motoe,bus=ehci.0,vendorid=0x22b8,productid=0x2e25"

# HTC A9
append qemu_args "  -device usb-host,id=htc,bus=ehci.0,vendorid=0x0bb4,productid=0x0ffe"

append qemu_args "  -nographic"

run_genode_until forever

# vi: set ft=tcl :
